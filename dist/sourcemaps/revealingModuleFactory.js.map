{"version":3,"sources":["revealingModuleFactory.js"],"names":["revealingModuleFactory","defineEnumPropValue","onObj","propName","value","Object","defineProperty","enumerable","unConfigurableNamespace","nsString","obj","valueToSet","shouldSetValue","_typeof","_undefined","agg","key","ind","parts","length","ObjHasOwnProperty","reduce","isPopulatedNsString","revealingModule","isPopulatedValue","name"],"mappings":"mdAAIA,uBAA0B,WAiB9B,QAASC,GAAqBC,EAAOC,EAAUC,GAC3C,MAAOC,QAAOC,eAAeJ,EAAOC,GAChCC,MAAOA,EACPG,YAAY,IAYpB,QAASC,GAAyBC,EAAUC,EAAKC,GAC7C,GAAMC,QAAiB,KAAOD,EAAP,YAAAE,QAAOF,MAAeG,CADjD,OAAAL,GAASD,MAAAA,KAAAA,OAAyBC,SAAAA,EAAAA,EAAUC,EAAKC,GAC7C,GAAMC,GAAiBG,EAAOJ,eAAPK,EAYlB,OAPGC,KAAQC,EAAMC,OAAS,GAH/BP,IAAAQ,EACAnB,EAAsBc,EAAKM,EAAOV,GAE1BM,QAAQC,EAAAA,MAAAJ,GAERb,GACHA,EACec,EAAIC,MAGnBD,EAAAC,IACDN,GAwCR,QAASV,KAAT,MAAA,SAASA,GAATS,EAAmCL,GAC/B,GAAAkB,QAAgBC,KAAiBd,EAAjBc,YAAAA,QAAiBd,MAAUL,EACvCoB,OAAIF,KAAsBlB,EAAtBkB,YAAAA,QAAsBlB,MAAOK,CAAjC,OAAAa,KACuBE,EACnBF,EAAwBE,EAAAA,IACxBF,GAAOd,GACVA,EACQc,EAAuBE,EAA3BpB,GACDI,IA3FZ,GAAAM,GAAA,WAkGAb,OAHCA,GAAAD,EAAAQ,EAAAiB,KAAAjB,GAGDP,EAAoBD,EAAwBC,EAAoBwB,KAAMxB,GAAtEA","file":"../revealingModuleFactory.js","sourcesContent":["var revealingModuleFactory = (function () {\n'use strict';\n\n/**\n * Created by elyde on 3/11/2017.\n */\n\nconst _undefined = 'undefined';\n\n/**\n * Sets an enumerable property (with value) on an object.\n * @function defineEnumPropValue\n * @param onObj {Object}\n * @param propName {String}\n * @param value {*}\n * @returns {Object}\n */\nfunction defineEnumPropValue (onObj, propName, value) {\n    return Object.defineProperty(onObj, propName, {\n        value: value,\n        enumerable: true\n    });\n}\n\n/**\n * Sets an un-configurable namespace on an object with optional value at the end of the namespace.\n * @note Copied directly from `sjljs`.\n * @param nsString {String} - Namespace or namespace-string to set on `obj`.\n * @param obj {Object} - Object to add un-configurable namespace on.\n * @param [valueToSet=undefined] {*} - Value to set.  Optional.  Default `undefined`.\n * @returns {*} - Object that was passed in.\n */\nfunction unConfigurableNamespace (nsString, obj, valueToSet)  {\n    const shouldSetValue = typeof valueToSet !== _undefined;\n\n    // Reduce original object to itself with requested modifications\n    return nsString.split('.').reduce((agg, key, ind, parts) => {\n        const ObjHasOwnProperty = agg.hasOwnProperty(key);\n        if (ind === parts.length - 1 &&\n            shouldSetValue && !ObjHasOwnProperty) {\n            defineEnumPropValue(agg, key, valueToSet);\n        }\n        else if (typeof agg[key] === _undefined &&\n            !ObjHasOwnProperty) {\n            defineEnumPropValue(agg, key, {});\n        }\n        return agg[key];\n    }, obj);\n}\n\n/**\n * Revealing module function.  Returns itself if being called as a setter or stored\n *  member/namespace if one is found.\n * @function revealingModule\n * @param nsString {String} - Name of module to store/get or namespace string which can also include module name to get/set at end.\n * @param [value=undefined] {*} - Value to set on module (revealing module function).\n * @returns {*} - Self or found namespace/module.\n */\n\n/**\n * Revealing module factory.  Returns a revealing module function which in turn allows you to set\n * modules on it via namespace strings.  Also note module namespaces are set as not `writable` and not `configurable`\n * via `Object.defineProperty` - This makes your namespaces harder to tamper with;  E.g.,\n * ```\n *   var myModule = revealingModuleFactory();\n\n *   // Some values to work with\n *   function Hello () {}\n *   function SomeMember () {}\n *\n *   myModule('some.namespace.Hello', Hello);\n *   myModule('SomeMember', SomeMember);\n *   myModule.SomeMember === SomeMember;        // `true`\n *   myModule.some.namespace.Hello === Hello;   // `true`\n *\n *   // Error is thrown here as property is not `writable` and\n *   // property is not `configurable` or in essence protected.\n *   myModule.SomeMember = Hello;\n *\n * ```\n *\n * @function revealingModuleFactory\n * @module revealingModuleFactory\n * @param [freeze=false] {Boolean} - Flag for freezing your modules once they are set.\n * @returns {revealingModule} - Revealing module function (store members on itself and makes them un-'configurable' (as propert(y|ies))).\n */\nfunction revealingModuleFactory () {\n    return function revealingModule (nsString, value) {\n        var isPopulatedNsString = typeof nsString !== _undefined,\n            isPopulatedValue = typeof value !== _undefined;\n        if (isPopulatedNsString && !isPopulatedValue) { // Call as a setter-getter\n            return unConfigurableNamespace(nsString, revealingModule); // returns last set namespace object\n        }\n        else if (isPopulatedNsString && isPopulatedValue) { // Call as a setter\n            unConfigurableNamespace(nsString, revealingModule, value); // sets value on namespace\n        }\n        return revealingModule;\n    };\n}\n\ndefineEnumPropValue(revealingModuleFactory, unConfigurableNamespace.name, unConfigurableNamespace);\ndefineEnumPropValue(revealingModuleFactory, defineEnumPropValue.name, defineEnumPropValue);\n\nreturn revealingModuleFactory;\n\n}());\n"]}